apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: logio-deployment
  template: logio-deployment-template
metadata:
  name: logio-deployment
  namespace: openshift
objects:

- apiVersion: v1
  kind: Secret
  metadata:
    name: logio-server-proxy
    namespace: ${DEPLOY_PROJECT}
  data:
    session_secret: ${SITE_SECRET}
  type: Opaque

- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      serviceaccounts.openshift.io/oauth-redirectreference.logio: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"logio"}}'
    name: logio
    namespace: ${DEPLOY_PROJECT}

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: logio-server
    labels:
      name: logio-server
    namespace: ${DEPLOY_PROJECT}
  spec:
    replicas: 1
    selector:
      name: logio-server
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          name: logio-server
      spec:
        containers:
          - env:
              - name: LOGIO_WEB_OPENSHIFT
                value: apply
            name: logio-server
            image: docker-registry.default.svc/${BUILD_PROJECT}/logio_alpine
            imagePullPolicy: Always
            ports:
              - name: logio-server
                containerPort: 28778
                protocol: TCP
              - name: logio-harvester
                containerPort: 28777
                protocol: TCP
          - name: oauth-proxy 
            args:
              - -provider=openshift
              - -https-address=:8888
              - -http-address=
              - -email-domain=*
              - -upstream=http://localhost:28778
              - -tls-cert=/etc/tls/private/tls.crt
              - -tls-key=/etc/tls/private/tls.key
              - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
              - -cookie-secret-file=/etc/proxy/secrets/session_secret
              - -openshift-service-account=logio
              - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              - -skip-auth-regex=^/metrics
            image: quay.io/openshift/origin-oauth-proxy:latest
            imagePullPolicy: IfNotPresent
            ports:
              - name: oauth-proxy
                containerPort: 8888    
                protocol: TCP
            volumeMounts:
              - mountPath: /etc/tls/private
                name: secret-logio-tls
              - mountPath: /etc/proxy/secrets
                name: secret-logio-server-proxy
        serviceAccountName: logio
        volumes:
          - name: secret-logio-tls
            secret:
              defaultMode: 420
              secretName: logio-tls
          - name: secret-logio-server-proxy
            secret:
              defaultMode: 420
              secretName: logio-server-proxy
    triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
            - logio-server
          from:
            kind: ImageStreamTag
            name: 'logio_alpine:latest'
            namespace: ${BUILD_PROJECT}
          lastTriggeredImage: docker-registry.default.svc/${BUILD_PROJECT}/logio_alpine
        type: ImageChange

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: logio-tls
    labels:
      name: logio-server
    name: logio-server
    namespace: ${DEPLOY_PROJECT}
  spec:
    ports:
    - name: proxy
      port: 8888
      protocol: TCP
      targetPort: oauth-proxy
    - name: logio-server
      port: 28778
      protocol: TCP
      targetPort: 28778
    - name: logio-harvester
      port: 28777
      protocol: TCP
      targetPort: 28777
    selector:
      deploymentconfig: logio-server
    sessionAffinity: None
    type: ClusterIP

- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    labels:
      app: logio-server-deployment
      name: logio-server
      template: logio-server-deployment-template
    name: logio
    namespace: ${DEPLOY_PROJECT}
  spec:
    port:
      targetPort: proxy
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: reencrypt
    to:
      kind: Service
      name: logio-server
      weight: 100
    wildcardPolicy: None

#Service Account for oc view permittion
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: harvester
    namespace: ${DEPLOY_PROJECT}

# #Create Role
# - apiVersion: rbac.authorization.k8s.io/v1beta1
#   kind: Role
#   metadata:
#     name: harvester_view
#     namespace: ${DEPLOY_PROJECT}
#   rules:
#   # Just an example, feel free to change it
#   - apiGroups: [""]
#     resources: ["pods"]
#     verbs: ["get", "watch", "list"]

# #Add RBAC to SA 
# - apiVersion: rbac.authorization.k8s.io/v1beta1
#   kind: RoleBinding
#   metadata:
#     name: harvester_rbac
#     namespace: ${DEPLOY_PROJECT}
#   subjects:
#     - kind: ServiceAccount
#       name: harvester
#   roleRef:
#     kind: Role
#     name: harvester_view
#     apiGroup: rbac.authorization.k8s.io

#RBAC for adding SA multiproject reed permition
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRoleBinding
  metadata:
    name: harvester_rbac
  subjects:
    - kind: ServiceAccount
      name: harvester
      namespace: ${DEPLOY_PROJECT}
  roleRef:
    kind: ClusterRole
    name: cluster-reader
    apiGroup: rbac.authorization.k8s.io

# Allow pull image from project "jenkins-ci" to "thunder"
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: system:image-puller
    namespace: ${BUILD_PROJECT}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:image-puller
  subjects:
  - kind: ServiceAccount
    name: harvester
    namespace: ${DEPLOY_PROJECT}
  - kind: ServiceAccount
    name: logio
    namespace: ${DEPLOY_PROJECT}

#Allow containers to run as root
- apiVersion: security.openshift.io/v1
  kind: SecurityContextConstraints
  metadata:
    name: harvester
    namespace: ${DEPLOY_PROJECT}
  volumes:
  - configMap
  - downwardAPI
  - emptyDir
  - persistentVolumeClaim
  - projected
  - secret
  priority: 10
  readOnlyRootFilesystem: false
  requiredDropCapabilities:
  - MKNOD
  runAsUser:
    type: RunAsAny
  seLinuxContext:
    type: MustRunAs
  supplementalGroups:
    type: RunAsAny
  users:
  - system:serviceaccount:${DEPLOY_PROJECT}:harvester
  - system:serviceaccount:${DEPLOY_PROJECT}:logio  
  allowHostDirVolumePlugin: false
  allowHostIPC: false
  allowHostNetwork: false
  allowHostPID: false
  allowHostPorts: false
  allowPrivilegeEscalation: true
  allowPrivilegedContainer: false
  allowedCapabilities: null
  defaultAddCapabilities: null
  fsGroup:
    type: RunAsAny

#Deploy Hervester
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    labels:
      app: logio-harvester
    name: logio-harvester
    namespace: ${DEPLOY_PROJECT}
  spec:
    replicas: 1
    selector:
      app: logio-harvester
      deploymentconfig: logio-harvester
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: logio-harvester
          deploymentconfig: logio-harvester
      spec:
        containers:
          - env:
              #URL to Logio web server
              - name: LOGIO_SERVER_URL
                value: "logio-server.${DEPLOY_PROJECT}.svc"
              #Apply script to generate resources and connect it to Logio Web Server   
              - name: HARVESTER_OPENSHIFT
                value: 'apply'
              - name: INSTALL_OPENSHIFT_CLI
                value: "no"
              - name: SINCE_TIME
                value: '1h'
              - name: PROJECT_NAME
                # value: "thunder jenkins-ci"
              - name: GREP_POD_NAMES
                # value: "rve"
              - name: SKIP_POD_NAMES
                # value: "mysql"
              - name: READOUT_PERIOD
                # value: "30s"
              - name: READ_PERIODICALY
                # value: "yes"
            image: docker-registry.default.svc/${BUILD_PROJECT}/harvester_alpine
            imagePullPolicy: Always
            name: logio-harvester
            ports:
              - containerPort: 28777
                protocol: TCP
              - containerPort: 28778
                protocol: TCP
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        serviceAccountName: harvester
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
            - logio-harvester
          from:
            kind: ImageStreamTag
            name: 'harvester_alpine:latest'
            namespace: ${BUILD_PROJECT}
          lastTriggeredImage: docker-registry.default.svc/${BUILD_PROJECT}/harvester_alpine
        type: ImageChange

#Harvester service
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    labels:
      app: logio-harvester
    name: logio-harvester
    namespace: ${DEPLOY_PROJECT}
  spec:
    ports:
      - name: 28777-tcp
        port: 28777
        protocol: TCP
        targetPort: 28777
      - name: 28778-tcp
        port: 28778
        protocol: TCP
        targetPort: 28778
    selector:
      deploymentconfig: logio-harvester
    sessionAffinity: None
    type: ClusterIP

parameters:
- description: Project (Namespace)
  displayName: Project (Namespace)
  name: BUILD_PROJECT
  value: "openshift"
- description: Project (Namespace)
  displayName: Project (Namespace)
  name: DEPLOY_PROJECT
- description: Site secret.
  displayName: Site secret.
  from: '[a-zA-Z0-9]{40}'
  generate: expression
  name: SITE_SECRET
  required: true
