apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: logio-build
  template: logio-build-template
metadata:
  name: logio-build
  namespace: openshift
objects:

#Import image from axternal repo to lockal
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: nodejs_alpine
    namespace: ${JENKINS_PROJECT_NAME}
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: roskamach/nodejs_alpine:v6.9.5
      from:
        kind: DockerImage
        name: roskamach/nodejs_alpine:v6.9.5
      generation: 2
      importPolicy: {}
      name: v6.9.5
      referencePolicy:
        type: Source

#ImageStream for builded a
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: logio_alpine
    namespace: ${JENKINS_PROJECT_NAME}
  spec:
    lookupPolicy:
      local: false
  status:
    dockerImageRepository: docker-registry.default.svc/${JENKINS_PROJECT_NAME}/logio_alpine

#ImageStream for builded a
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: harvester_alpine
    namespace: ${JENKINS_PROJECT_NAME}
  spec:
    lookupPolicy:
      local: false
  status:
    dockerImageRepository: docker-registry.default.svc/${JENKINS_PROJECT_NAME}/harvester_alpine

#Create build with docker strategy for Logio Server
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    name: logio-alpine
    namespace: ${JENKINS_PROJECT_NAME}
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: logio_alpine:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: /build/logio
      git:
        uri: https://github.com/ros-kamach/log.io_alpine
      type: Git
    strategy:
      dockerStrategy:
        env:
          - name: OPENSHIFT_CLI
            # value: 'yes'
            value: 'no'
        from:
          kind: ImageStreamTag
          name: nodejs_alpine:v6.9.5
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: eRWXyQKLJT9qXSZzWdNB
      type: GitHub
    - generic:
        secret: aNSpMKtoDrqplwXCFnw4
      type: Generic
    - type: ConfigChange
    # - imageChange:
    #     lastTriggeredImageID: roskamach/nodejs_alpine
    #   type: ImageChange


#Create build with docker strategy for Harvester
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    name: harvester-alpine
    namespace: ${JENKINS_PROJECT_NAME}
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: harvester_alpine:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: /build/logio
      git:
        uri: https://github.com/ros-kamach/log.io_alpine
      type: Git
    strategy:
      dockerStrategy:
        env:
          - name: OPENSHIFT_CLI
            value: 'yes'
            # value: 'no'
        from:
          kind: ImageStreamTag
          name: nodejs_alpine:v6.9.5
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: eRWXyQKLJT9qXSZzWdNB
      type: GitHub
    - generic:
        secret: aNSpMKtoDrqplwXCFnw4
      type: Generic
    - type: ConfigChange
    # - imageChange:
    #     lastTriggeredImageID: roskamach/logio_alpine
    #   type: ImageChange

parameters:
- description: Project (Namespace)
  displayName: Project (Namespace)
  name: JENKINS_PROJECT_NAME
  value: "jenkins-ci"